<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:menu="org.samchon.simulation.menu.*"
		  
		  width="100%" height="150" xmlns:axis="org.samchon.ui.axis.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ListCollectionView;
			protected var _parentMovie:MinimapChart = null;
			
			public function set parentMovie(movie:MinimapChart):void {
				_parentMovie = movie;
			}
			protected function goUp(event:MouseEvent):void {
				_parentMovie.swapSubChart(this, -1);
			}
			protected function goDown(event:MouseEvent):void {
				_parentMovie.swapSubChart(this, 1);
			}
			protected function remove(event:MouseEvent):void {
				if(removeActiveFunction != null)
					removeActiveFunction.apply( null, [new MinimapSubChartEvent(this)] );
				
				_parentMovie.removeSubChart( this );
				
				if(removeCompleteFunction != null)
					removeCompleteFunction.apply( new MinimapSubChartEvent(this) );
			}
			
			/*
			============================================================
			CHART's METHODs
			============================================================
			*/
			protected var _title:String;
			public function set dataProvider(listCollection:ListCollectionView):void {
				chart.dataProvider = listCollection;
			}		
			public function set title(value:String):void	{	_title = value;	}
			public function set categoryField(value:String):void {
				subCategoryAxis.categoryField = value;
			}
			public function set series(array:Array):void {
				chart.series = array;
			}
			public function set dataTipFunction(procedure:Function):void {
				chart.showDataTips = true;
				chart.dataTipFunction = procedure;
			}
			public function set dataTipMode(value:String):void {
				chart.dataTipMode = value;
			}
			
			public function get title():String				{	return _title;	}
			
			/*
			============================================================
			EVENT LISTENER
			============================================================
			*/
			protected var removeActiveFunction:Function = null;
			protected var removeCompleteFunction:Function = null;
			
			public override function addEventListener(type:String, listener:Function, useCapture:Boolean=false, priority:int=0, useWeakReference:Boolean=false):void {
				if(type == MinimapSubChartEvent.REMOVE_ACTIVATE)
					removeActiveFunction = listener;
				else if(type == MinimapSubChartEvent.REMOVE_COMPLETE)
					removeCompleteFunction = listener;
				else
					super.addEventListener(type, listener, useCapture, priority, useWeakReference);
			}
		]]>
	</fx:Script>
	<mx:HRule width="100%" />
	<s:HGroup width="100%">
		<mx:Legend width="100%" height="25" direction="horizontal" dataProvider="{chart}" />
		<menu:IconButton source="arrow_up" click="goUp(event)" />
		<menu:IconButton source="arrow_down" click="goDown(event)" />
		<menu:IconButton source="delete" click="remove(event)" />
	</s:HGroup>
	<mx:ColumnChart id="chart" 
					width="100%" height="100%">
		<!-- 
		SERIES IS EMPTY. INSERT IT DIRECTLY 
		-->
		<!-- REMOVE (SHADOW) EFFECTS -->
		<mx:seriesFilters>
			<fx:Array/>
		</mx:seriesFilters>
		
		<!-- AXIS -->
		<mx:horizontalAxis>
			<mx:CategoryAxis id="subCategoryAxis" categoryField="date" />
		</mx:horizontalAxis>
		<mx:verticalAxis>
			<mx:LinearAxis id="subLinearAxis" baseAtZero="false" />
		</mx:verticalAxis>
		
		<!-- RENDERER -->
		<mx:horizontalAxisRenderers>
			<mx:AxisRenderer axis="{subCategoryAxis}" labelRenderer="org.samchon.ui.chart.axis.EmptyUnder" />
		</mx:horizontalAxisRenderers>
		<mx:verticalAxisRenderers>
			<axis:WidthAxisRenderer axis="{subLinearAxis}"
									placement="right"/>
		</mx:verticalAxisRenderers>
		
		<!-- ANNOTATION -->
		<mx:annotationElements>
			<s:Group id="annotationGroup" width="100%" height="100%" />
		</mx:annotationElements>
		<s:Line width="100%" />
	</mx:ColumnChart>
	<mx:HRule width="100%" />
</s:VGroup>