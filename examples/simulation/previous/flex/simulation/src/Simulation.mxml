<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:ui="org.samchon.ui.*"
			   xmlns:menu="org.samchon.simulation.menu.*"
			   xmlns:movie="org.samchon.simulation.movie.*"
			   xmlns:retrieve="org.samchon.simulation.simulation.retrieve.*"
			   xmlns:simulation="org.samchon.simulation.*"
			   xmlns:grid="org.samchon.simulation.retrieve.grid.*"
			   
			   creationComplete="creationCompleted(event)"
			   scriptTimeLimit="9999">
	<fx:Style source="index.css" />
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.PopUpManager;
			
			import org.samchon.simulation.accessory.AboutWindow;
			import org.samchon.simulation.menu.InquiryMenu;
			import org.samchon.simulation.movie.*;
			import org.samchon.simulation.simulation.retrieve.Corporate;
			import org.samchon.simulation.simulation.retrieve.CorporateGrid;
			
			import spark.components.Panel;
			
			protected var movie:InquiryMovie;
			protected var socket:LocalConnection;
			
			public var corporateGrid:CorporateGrid;
			public function set topMenu(val:InquiryMenu):void {
				val.window = this;
				vGroup.addElementAt(val, 0);
			}
			
			protected function creationCompleted(event:FlexEvent):void {
				this.removeEventListener(FlexEvent.CREATION_COMPLETE, creationCompleted);
				
				//TO INITIALIZE THREAD
				Root.window = this;
				
				if (parameters.hasOwnProperty("window") == false)
					parameters.window = "Price";
				
				switch(parameters.window) {
					//INQUIRY
					case "Price":
						movie = new PriceMovie();
						break;
					case "Finance":
						movie = new FinanceMovie();
						break;
					case "Comparison":
						movie = new ComparisonMovie();
						break;
					
					//SIMULATION
					case "Retrieve":
						movie = new RetrieveMovie();
						break;
					case "BackTesting":
						movie = new BackTestingMovie();
						break;
					case "Montecarlo":
						movie = new MontecarloMovie();
						break;
				}
				Root.category = movie.category;
				
				movie.parent = this;
				contentHGroup.addElement(movie);
				
				//CORPORATE LIST AND SOCKET
				if(parameters.window != "Retrieve")
				{
					constructCorporateGrid();
					constructSocket();
				}
			}
			protected function constructCorporateGrid():void
			{
				corporateGrid = new CorporateGrid();
				corporateGrid.window = this;
				corporateGrid.change = corporateChanged;
				corporateGrid.itemDoubleClick = corporateDoubleClicked;
				
				contentHGroup.addElementAt( corporateGrid, 0 );
			}
			protected function constructSocket():void
			{
				if (parameters.hasOwnProperty("no") == false)
					parameters.no = 0;
				try
				{
					socket = new LocalConnection();
					socket.connect("org.samchon.simulation" + parameters.no);
					socket.client = {constructCorporateList: corporateGrid.constructCorporateList};
				}
				catch(error:Error)
				{
					
				}
			}
			public function getMovie():InquiryMovie
			{
				return this.movie;
			}
			
			/* -------------------------------------------------------
			EVENT FROM CORPORATE_LIST
			------------------------------------------------------- */
			protected function corporateChanged(event:ListEvent):void 
			{
				var selectedCorporate:Corporate = corporateGrid.selectedCorporate;
				
				if(selectedCorporate == null)
					return;
				else
					movie.goCorporate( selectedCorporate.getCode() );
			}
			protected function corporateDoubleClicked(event:ListEvent):void 
			{
				var selectedCorporate:Corporate = corporateGrid.selectedCorporate;
				
				if(selectedCorporate == null)
					return;
				else
					movie.goCorporateDoubleClicked( selectedCorporate.getCode() );
			}
			
			/* -------------------------------------------------------
			EVENT FROM MENU
			------------------------------------------------------- */
			override public function set currentState(value:String):void
			{
				movie.currentState = value;
			}
			public function getFileName():String
			{
				return movie.getFileName();
			}
			
			public function goSave(extension:String):void {
				movie.goSave(extension);
			}
			
			//METHODS OF SIMULATION
			protected function get simulationMovie():SimulationMovie
			{
				return movie as SimulationMovie;
			}
			
			public function goNewFile(event:MouseEvent):void
			{
				simulationMovie.goNewFile(event);
			}
			public function goOpenFile(event:MouseEvent):void
			{
				simulationMovie.goOpenFile(event);
			}
			public function goSaveFile(event:MouseEvent):void
			{
				simulationMovie.goSaveFile(event);
			}
			
		]]>
	</fx:Script>
	
	<!-- BACKGROUND -->
	<s:BorderContainer width="100%" height="100%" alpha="1.00"
					   backgroundImage="@Embed('assets/background.gif')"
					   backgroundImageFillMode="repeat"/>
	
	<!-- CONTENT -->
	<s:VGroup id="vGroup" 
			  width="100%" height="100%">
		<ui:HGroup id="contentHGroup"
				   padding="5"
				   width="100%" height="100%">
			<!--
			HERE IS THE POSITION FOR CORPORATE_GRID
			-->
			<!--
			HERE IS THE POSITION FOR MOVIE; INQUIRY, SIMULATION AND SO ON
			-->
		</ui:HGroup>
	</s:VGroup>
</s:Application>
