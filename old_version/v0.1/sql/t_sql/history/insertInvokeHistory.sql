SET 
  ANSI_NULLS, 
  QUOTED_IDENTIFIER, 
  CONCAT_NULL_YIELDS_NULL, 
  ANSI_WARNINGS, 
  ANSI_PADDING 
ON;

USE OraQ;
IF OBJECT_ID('insertInvokeHistory') IS NOT NULL		DROP PROCEDURE insertInvokeHistory;
IF TYPE_ID('INVOKE_PARAMETER_INSERT_TABLE') IS NOT NULL	DROP TYPE INVOKE_PARAMETER_INSERT_TABLE;
GO

CREATE TYPE INVOKE_PARAMETER_INSERT_TABLE AS TABLE
(
	name NVARCHAR(100),
	type NVARCHAR(100),
	value NVARCHAR(100)
);
GO

CREATE PROCEDURE insertInvokeHistory
	@serviceID INT,
	@listener NVARCHAR(100),
	@parameterTable INVOKE_PARAMETER_INSERT_TABLE READONLY,
	@memberID NVARCHAR(100)
AS
	--INSERT INTO INVOKE AND GET AUTO_INCREMENTED
	INSERT INTO History.history VALUES (@memberID, GETDATE());
	DECLARE @historyUID INT = SCOPE_IDENTITY();

	--INSERT INTO INVOKE
	INSERT INTO History.invoke VALUES (@historyUID, @serviceID, @listener);
	
	--INSERT INTO INVOKE_PARAMETER
	INSERT INTO History.invokeParameter
	SELECT @historyUID, ROW_NUMBER() OVER (ORDER BY (SELECT 1)), name, type, value
	FROM @parameterTable;
GO