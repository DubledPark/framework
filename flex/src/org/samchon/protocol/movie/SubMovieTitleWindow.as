package org.samchon.protocol.movie
{
	import mx.managers.PopUpManager;
	
	import org.samchon.library.ui.TitleWindow;
	import org.samchon.protocol.invoke.IProtocol;
	import org.samchon.protocol.invoke.Invoke;
	
	/**
	 * <p> A TitleWindow which is generated by SubMovie. </p>
	 * 
	 * <img src="movie.png" />
	 * 
	 * @copy org.samchon.library.ui.TitleWindow 
	 */ 
	public class SubMovieTitleWindow 
		extends TitleWindow 
		implements IProtocol
	{
		/**
		 * <p> Parent SubMovie who made this <code>SubMovieTitleWindow</code>. </p>
		 */
		protected var subMovie:SubMovie;
		
		/**
		 * <p> Constructor from parent SubMovie. </p>
		 * 
		 * @param window Parent SubMovie who made this SubMovieTitleWindow
		 */
		public function SubMovieTitleWindow(subMovie:SubMovie = null)
		{
			super();
			
			this.subMovie = subMovie;
		}
		
		public function sendData(invoke:Invoke):void
		{
			subMovie.sendData(invoke);
		}
		public function replyData(invoke:Invoke):void
		{
		}
		
		/**
		 * <p> Static factory method for SubMovieTitleWindow. </p>
		 * <p> Does not recommend to create SubMovieTitleWindow by this. Use each createPopUp method in SubMovie. </p>
		 * 
		 * @param subMovie Parent SubMovie
		 * @param $class Target SubMovieTitleWindow class to create
		 * 
		 * @see SubMovie
		 */
		public static function createPopUp(subMovie:SubMovie, $class:Class):SubMovieTitleWindow
		{
			var popUp:SubMovieTitleWindow = PopUpManager.createPopUp(subMovie, $class, true) as SubMovieTitleWindow;
			popUp.subMovie = subMovie;
			PopUpManager.centerPopUp(popUp);
			
			return popUp;
		}
	}
}